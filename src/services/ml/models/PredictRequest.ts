/* tslint:disable */
/* eslint-disable */
/**
 * PP Label ML backend API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PredictRequestOther } from './PredictRequestOther';
import {
  PredictRequestOtherFromJSON,
  PredictRequestOtherFromJSONTyped,
  PredictRequestOtherToJSON,
} from './PredictRequestOther';

/**
 *
 * @export
 * @interface PredictRequest
 */
export interface PredictRequest {
  /**
   *
   * @type {string}
   * @memberof PredictRequest
   */
  img: string;
  /**
   *
   * @type {string}
   * @memberof PredictRequest
   */
  format: string;
  /**
   *
   * @type {boolean}
   * @memberof PredictRequest
   */
  createLabel?: boolean;
  /**
   *
   * @type {PredictRequestOther}
   * @memberof PredictRequest
   */
  other?: PredictRequestOther;
}

/**
 * Check if a given object implements the PredictRequest interface.
 */
export function instanceOfPredictRequest(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'img' in value;
  isInstance = isInstance && 'format' in value;

  return isInstance;
}

export function PredictRequestFromJSON(json: any): PredictRequest {
  return PredictRequestFromJSONTyped(json, false);
}

export function PredictRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PredictRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    img: json['img'],
    format: json['format'],
    createLabel: !exists(json, 'create_label') ? undefined : json['create_label'],
    other: !exists(json, 'other') ? undefined : PredictRequestOtherFromJSON(json['other']),
  };
}

export function PredictRequestToJSON(value?: PredictRequest | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    img: value.img,
    format: value.format,
    create_label: value.createLabel,
    other: PredictRequestOtherToJSON(value.other),
  };
}
