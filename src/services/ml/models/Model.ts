/* tslint:disable */
/* eslint-disable */
/**
 * PP Label ML backend API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface Model
 */
export interface Model {
  /**
   *
   * @type {string}
   * @memberof Model
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof Model
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof Model
   */
  taskCategories?: string;
  /**
   *
   * @type {boolean}
   * @memberof Model
   */
  interactive?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof Model
   */
  labelNames?: Array<string>;
}

/**
 * Check if a given object implements the Model interface.
 */
export function instanceOfModel(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ModelFromJSON(json: any): Model {
  return ModelFromJSONTyped(json, false);
}

export function ModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Model {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: !exists(json, 'name') ? undefined : json['name'],
    description: !exists(json, 'description') ? undefined : json['description'],
    taskCategories: !exists(json, 'task_categories') ? undefined : json['task_categories'],
    interactive: !exists(json, 'interactive') ? undefined : json['interactive'],
    labelNames: !exists(json, 'label_names') ? undefined : json['label_names'],
  };
}

export function ModelToJSON(value?: Model | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    description: value.description,
    task_categories: value.taskCategories,
    interactive: value.interactive,
    label_names: value.labelNames,
  };
}
