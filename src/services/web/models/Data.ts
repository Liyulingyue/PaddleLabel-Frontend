/* tslint:disable */
/* eslint-disable */
/**
 * PaddleLabel API Specs
 * Web backend APIs for PaddleLabel
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: me@linhan.email
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Task } from './Task';
import { TaskFromJSON, TaskFromJSONTyped, TaskToJSON } from './Task';

/**
 *
 * @export
 * @interface Data
 */
export interface Data {
  /**
   *
   * @type {number}
   * @memberof Data
   */
  readonly dataId?: number;
  /**
   *
   * @type {number}
   * @memberof Data
   */
  taskId?: number;
  /**
   *
   * @type {string}
   * @memberof Data
   */
  size?: string;
  /**
   *
   * @type {Task}
   * @memberof Data
   */
  task?: Task;
  /**
   *
   * @type {string}
   * @memberof Data
   */
  readonly created?: string;
  /**
   *
   * @type {string}
   * @memberof Data
   */
  readonly modified?: string;
  /**
   *
   * @type {string}
   * @memberof Data
   */
  sault?: string;
  /**
   *
   * @type {boolean}
   * @memberof Data
   */
  predicted?: boolean;
}

/**
 * Check if a given object implements the Data interface.
 */
export function instanceOfData(value: object): value is Data {
  return true;
}

export function DataFromJSON(json: any): Data {
  return DataFromJSONTyped(json, false);
}

export function DataFromJSONTyped(json: any, ignoreDiscriminator: boolean): Data {
  if (json == null) {
    return json;
  }
  return {
    dataId: json['data_id'] == null ? undefined : json['data_id'],
    taskId: json['task_id'] == null ? undefined : json['task_id'],
    size: json['size'] == null ? undefined : json['size'],
    task: json['task'] == null ? undefined : TaskFromJSON(json['task']),
    created: json['created'] == null ? undefined : json['created'],
    modified: json['modified'] == null ? undefined : json['modified'],
    sault: json['sault'] == null ? undefined : json['sault'],
    predicted: json['predicted'] == null ? undefined : json['predicted'],
  };
}

export function DataToJSON(value?: Omit<Data, 'data_id' | 'created' | 'modified'> | null): any {
  if (value == null) {
    return value;
  }
  return {
    task_id: value['taskId'],
    size: value['size'],
    task: TaskToJSON(value['task']),
    sault: value['sault'],
    predicted: value['predicted'],
  };
}
