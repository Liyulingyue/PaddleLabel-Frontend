/* tslint:disable */
/* eslint-disable */
/**
 * PaddleLabel API Specs
 * Back end APIs for PP-Label
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: me@linhan.email
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProjectOtherSettingsLabelMappingInner } from './ProjectOtherSettingsLabelMappingInner';
import {
  ProjectOtherSettingsLabelMappingInnerFromJSON,
  ProjectOtherSettingsLabelMappingInnerFromJSONTyped,
  ProjectOtherSettingsLabelMappingInnerToJSON,
} from './ProjectOtherSettingsLabelMappingInner';

/**
 *
 * @export
 * @interface ProjectOtherSettings
 */
export interface ProjectOtherSettings {
  /**
   * ML后端地址，一般是 http://localhost:1234
   * @type {string}
   * @memberof ProjectOtherSettings
   */
  mlBackendUrl?: string;
  /**
   *
   * @type {string}
   * @memberof ProjectOtherSettings
   * @deprecated
   */
  perviousModel?: string;
  /**
   *
   * @type {object}
   * @memberof ProjectOtherSettings
   * @deprecated
   */
  models?: object;
  /**
   *
   * @type {string}
   * @memberof ProjectOtherSettings
   * @deprecated
   */
  segMaskType?: string;
  /**
   * 正在使用的模型名称
   * @type {string}
   * @memberof ProjectOtherSettings
   */
  modelName?: string;
  /**
   * 标签对应关系
   * @type {Array<ProjectOtherSettingsLabelMappingInner>}
   * @memberof ProjectOtherSettings
   */
  labelMapping?: Array<ProjectOtherSettingsLabelMappingInner>;
}

/**
 * Check if a given object implements the ProjectOtherSettings interface.
 */
export function instanceOfProjectOtherSettings(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ProjectOtherSettingsFromJSON(json: any): ProjectOtherSettings {
  return ProjectOtherSettingsFromJSONTyped(json, false);
}

export function ProjectOtherSettingsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ProjectOtherSettings {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    mlBackendUrl: !exists(json, 'mlBackendUrl') ? undefined : json['mlBackendUrl'],
    perviousModel: !exists(json, 'perviousModel') ? undefined : json['perviousModel'],
    models: !exists(json, 'models') ? undefined : json['models'],
    segMaskType: !exists(json, 'segMaskType') ? undefined : json['segMaskType'],
    modelName: !exists(json, 'modelName') ? undefined : json['modelName'],
    labelMapping: !exists(json, 'label_mapping')
      ? undefined
      : (json['label_mapping'] as Array<any>).map(ProjectOtherSettingsLabelMappingInnerFromJSON),
  };
}

export function ProjectOtherSettingsToJSON(value?: ProjectOtherSettings | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  console.log('label_mapping', {
    mlBackendUrl: value.mlBackendUrl,
    perviousModel: value.perviousModel,
    models: value.models,
    segMaskType: value.segMaskType,
    modelName: value.modelName,
    label_mapping:
      value.labelMapping === undefined
        ? undefined
        : (value.labelMapping as Array<any>).map(ProjectOtherSettingsLabelMappingInnerToJSON),
  });

  return {
    mlBackendUrl: value.mlBackendUrl,
    perviousModel: value.perviousModel,
    models: value.models,
    segMaskType: value.segMaskType,
    modelName: value.modelName,
    label_mapping:
      value.labelMapping === undefined
        ? undefined
        : (value.labelMapping as Array<any>).map(ProjectOtherSettingsLabelMappingInnerToJSON),
  };
}
